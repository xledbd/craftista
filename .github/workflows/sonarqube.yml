name: Sonarqube push to main

on:
  push:
    branches: ["main"]

jobs:
  changed-files:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.changed-files.outputs.frontend_any_modified }}
      catalogue: ${{ steps.changed-files.outputs.catalogue_any_modified }}
      recommendation: ${{ steps.changed-files.outputs.recommendation_any_modified }}
      voting: ${{ steps.changed-files.outputs.voting_any_modified }}
      modules: ${{ steps.changed-files.outputs.changed_keys }}

    steps:
    - uses: actions/checkout@v4
    - name: Get changed files in all modules
      id: changed-files
      uses: tj-actions/changed-files@v45
      with:
        matrix: true
        files_yaml: |
          frontend:
            - frontend/**
          catalogue:
            - catalogue/**
          recommendation:
            - recommendation/**
          voting:
            - voting/**

  frontend:
    name: Scan frontend
    needs: changed-files
    if: needs.changed-files.outputs.frontend == 'true'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Frontend scan
      uses: SonarSource/sonarqube-scan-action@v5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: frontend/
      
  catalogue:
    name: Scan catalogue
    needs: changed-files
    if: needs.changed-files.outputs.catalogue == 'true'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Catalogue scan
      uses: SonarSource/sonarqube-scan-action@v5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: catalogue/

  recommendation:
    name: Scan recommendation
    needs: changed-files
    if: needs.changed-files.outputs.recommendation == 'true'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Recommendation scan
      uses: SonarSource/sonarqube-scan-action@v5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: recommendation/

  voting:
    name: Scan voting
    needs: changed-files
    if: needs.changed-files.outputs.voting == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./voting

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: "corretto"
        java-version: "23"
        cache: maven
        cache-dependency-path: voting/pom.xml
    - name: Cache SonarQube packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build and analyze
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=xledbd-craftista-voting